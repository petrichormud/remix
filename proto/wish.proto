syntax = "proto3";
package data;
option go_package = "/proto/gen/go/wish";

service Wish {
  rpc CreatePatch (CreatePatchRequest) returns (CreatePatchReply);
  rpc Patch (PatchRequest) returns (PatchReply);
  rpc Patches (PatchesRequest) returns (PatchesReply);
  rpc DeletePatch (DeletePatchRequest) returns (DeletePatchReply);
  rpc CreatePatchChange (CreatePatchChangeRequest) returns (CreatePatchChangeReply);
  rpc DeletePatchChange (DeletePatchChangeRequest) returns (DeletePatchChangeReply);
  rpc MarkPatchReleased (MarkPatchReleasedRequest) returns (MarkPatchReleasedReply);
  rpc RevokePatchReleased (RevokePatchReleasedRequest) returns (RevokePatchReleasedReply);
  rpc ReleasedPatches (ReleasedPatchesRequest) returns (ReleasedPatchesReply);
  rpc MostRecentPatch (MostRecentPatchRequest) returns (MostRecentPatchReply);
}

message Patch {
  int64 id = 1;
  int64 major = 2;
  int64 minor = 3;
  int64 patch = 4;
  bool released = 5;
  string kind = 6;
  repeated PatchChange changes = 7;
}

message PatchChange {
  int64 id = 1;
  string title = 2;
  string text = 3;
}

message CreatePatchRequest {
  string kind = 1;
  int64 major = 2;
  int64 minor = 3;
  int64 patch = 4;
}

message CreatePatchReply {
  int64 id = 1;
}

message PatchRequest {
  int64 id = 1;
}

message PatchReply {
  Patch patch = 1;
}

message PatchesRequest {
  string kind = 1;
}
 
message PatchesReply {
  repeated Patch patches = 1;
}

message DeletePatchRequest {
  int64 id = 1;
}

message DeletePatchReply {
  int64 id = 1;
}

message CreatePatchChangeRequest {
  int64 pcid = 1;
  string title = 2;
  string text = 3;
}

message CreatePatchChangeReply {
  int64 id = 1;
  string title = 2;
  string text = 3;
}

message DeletePatchChangeRequest {
  int64 id = 1;
}

message DeletePatchChangeReply {
  int64 id = 1;
}

message MarkPatchReleasedRequest {
  int64 id = 1;
}

message MarkPatchReleasedReply {
  int64 id = 1;
}

message RevokePatchReleasedRequest {
  int64 id = 1;
}

message RevokePatchReleasedReply {
  int64 id = 1;
}

message ReleasedPatchesRequest {
  string kind = 1;
}

message ReleasedPatchesReply {
  repeated Patch patches = 1;
}

message MostRecentPatchRequest {
  string kind = 1;
}

message MostRecentPatchReply {
  Patch patch = 1;
}
