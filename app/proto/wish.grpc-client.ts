// @generated by protobuf-ts 2.9.4 with parameter client_grpc1
// @generated from protobuf file "wish.proto" (package "data", syntax proto3)
// tslint:disable
import { Wish } from "./wish";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { RequestSummariesForPlayerReply } from "./wish";
import type { RequestSummariesForPlayerRequest } from "./wish";
import type { AllRequestSummariesReply } from "./wish";
import type { AllRequestSummariesRequest } from "./wish";
import type { NewRequestReply } from "./wish";
import type { NewRequestRequest } from "./wish";
import type { MostRecentPatchReply } from "./wish";
import type { MostRecentPatchRequest } from "./wish";
import type { ReleasedPatchesReply } from "./wish";
import type { ReleasedPatchesRequest } from "./wish";
import type { RevokePatchReleasedReply } from "./wish";
import type { RevokePatchReleasedRequest } from "./wish";
import type { MarkPatchReleasedReply } from "./wish";
import type { MarkPatchReleasedRequest } from "./wish";
import type { DeletePatchChangeReply } from "./wish";
import type { DeletePatchChangeRequest } from "./wish";
import type { CreatePatchChangeReply } from "./wish";
import type { CreatePatchChangeRequest } from "./wish";
import type { DeletePatchReply } from "./wish";
import type { DeletePatchRequest } from "./wish";
import type { PatchesReply } from "./wish";
import type { PatchesRequest } from "./wish";
import type { PatchReply } from "./wish";
import type { PatchRequest } from "./wish";
import type { CreatePatchReply } from "./wish";
import type { CreatePatchRequest } from "./wish";
import * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service data.Wish
 */
export interface IWishClient {
    /**
     * @generated from protobuf rpc: CreatePatch(data.CreatePatchRequest) returns (data.CreatePatchReply);
     */
    createPatch(input: CreatePatchRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreatePatchReply) => void): grpc.ClientUnaryCall;
    createPatch(input: CreatePatchRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: CreatePatchReply) => void): grpc.ClientUnaryCall;
    createPatch(input: CreatePatchRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreatePatchReply) => void): grpc.ClientUnaryCall;
    createPatch(input: CreatePatchRequest, callback: (err: grpc.ServiceError | null, value?: CreatePatchReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: Patch(data.PatchRequest) returns (data.PatchReply);
     */
    patch(input: PatchRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: PatchReply) => void): grpc.ClientUnaryCall;
    patch(input: PatchRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: PatchReply) => void): grpc.ClientUnaryCall;
    patch(input: PatchRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: PatchReply) => void): grpc.ClientUnaryCall;
    patch(input: PatchRequest, callback: (err: grpc.ServiceError | null, value?: PatchReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: Patches(data.PatchesRequest) returns (data.PatchesReply);
     */
    patches(input: PatchesRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: PatchesReply) => void): grpc.ClientUnaryCall;
    patches(input: PatchesRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: PatchesReply) => void): grpc.ClientUnaryCall;
    patches(input: PatchesRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: PatchesReply) => void): grpc.ClientUnaryCall;
    patches(input: PatchesRequest, callback: (err: grpc.ServiceError | null, value?: PatchesReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: DeletePatch(data.DeletePatchRequest) returns (data.DeletePatchReply);
     */
    deletePatch(input: DeletePatchRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: DeletePatchReply) => void): grpc.ClientUnaryCall;
    deletePatch(input: DeletePatchRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: DeletePatchReply) => void): grpc.ClientUnaryCall;
    deletePatch(input: DeletePatchRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: DeletePatchReply) => void): grpc.ClientUnaryCall;
    deletePatch(input: DeletePatchRequest, callback: (err: grpc.ServiceError | null, value?: DeletePatchReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: CreatePatchChange(data.CreatePatchChangeRequest) returns (data.CreatePatchChangeReply);
     */
    createPatchChange(input: CreatePatchChangeRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreatePatchChangeReply) => void): grpc.ClientUnaryCall;
    createPatchChange(input: CreatePatchChangeRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: CreatePatchChangeReply) => void): grpc.ClientUnaryCall;
    createPatchChange(input: CreatePatchChangeRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreatePatchChangeReply) => void): grpc.ClientUnaryCall;
    createPatchChange(input: CreatePatchChangeRequest, callback: (err: grpc.ServiceError | null, value?: CreatePatchChangeReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: DeletePatchChange(data.DeletePatchChangeRequest) returns (data.DeletePatchChangeReply);
     */
    deletePatchChange(input: DeletePatchChangeRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: DeletePatchChangeReply) => void): grpc.ClientUnaryCall;
    deletePatchChange(input: DeletePatchChangeRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: DeletePatchChangeReply) => void): grpc.ClientUnaryCall;
    deletePatchChange(input: DeletePatchChangeRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: DeletePatchChangeReply) => void): grpc.ClientUnaryCall;
    deletePatchChange(input: DeletePatchChangeRequest, callback: (err: grpc.ServiceError | null, value?: DeletePatchChangeReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: MarkPatchReleased(data.MarkPatchReleasedRequest) returns (data.MarkPatchReleasedReply);
     */
    markPatchReleased(input: MarkPatchReleasedRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: MarkPatchReleasedReply) => void): grpc.ClientUnaryCall;
    markPatchReleased(input: MarkPatchReleasedRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: MarkPatchReleasedReply) => void): grpc.ClientUnaryCall;
    markPatchReleased(input: MarkPatchReleasedRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: MarkPatchReleasedReply) => void): grpc.ClientUnaryCall;
    markPatchReleased(input: MarkPatchReleasedRequest, callback: (err: grpc.ServiceError | null, value?: MarkPatchReleasedReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: RevokePatchReleased(data.RevokePatchReleasedRequest) returns (data.RevokePatchReleasedReply);
     */
    revokePatchReleased(input: RevokePatchReleasedRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: RevokePatchReleasedReply) => void): grpc.ClientUnaryCall;
    revokePatchReleased(input: RevokePatchReleasedRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: RevokePatchReleasedReply) => void): grpc.ClientUnaryCall;
    revokePatchReleased(input: RevokePatchReleasedRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: RevokePatchReleasedReply) => void): grpc.ClientUnaryCall;
    revokePatchReleased(input: RevokePatchReleasedRequest, callback: (err: grpc.ServiceError | null, value?: RevokePatchReleasedReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: ReleasedPatches(data.ReleasedPatchesRequest) returns (data.ReleasedPatchesReply);
     */
    releasedPatches(input: ReleasedPatchesRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ReleasedPatchesReply) => void): grpc.ClientUnaryCall;
    releasedPatches(input: ReleasedPatchesRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ReleasedPatchesReply) => void): grpc.ClientUnaryCall;
    releasedPatches(input: ReleasedPatchesRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ReleasedPatchesReply) => void): grpc.ClientUnaryCall;
    releasedPatches(input: ReleasedPatchesRequest, callback: (err: grpc.ServiceError | null, value?: ReleasedPatchesReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: MostRecentPatch(data.MostRecentPatchRequest) returns (data.MostRecentPatchReply);
     */
    mostRecentPatch(input: MostRecentPatchRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: MostRecentPatchReply) => void): grpc.ClientUnaryCall;
    mostRecentPatch(input: MostRecentPatchRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: MostRecentPatchReply) => void): grpc.ClientUnaryCall;
    mostRecentPatch(input: MostRecentPatchRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: MostRecentPatchReply) => void): grpc.ClientUnaryCall;
    mostRecentPatch(input: MostRecentPatchRequest, callback: (err: grpc.ServiceError | null, value?: MostRecentPatchReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: NewRequest(data.NewRequestRequest) returns (data.NewRequestReply);
     */
    newRequest(input: NewRequestRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: NewRequestReply) => void): grpc.ClientUnaryCall;
    newRequest(input: NewRequestRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: NewRequestReply) => void): grpc.ClientUnaryCall;
    newRequest(input: NewRequestRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: NewRequestReply) => void): grpc.ClientUnaryCall;
    newRequest(input: NewRequestRequest, callback: (err: grpc.ServiceError | null, value?: NewRequestReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: AllRequestSummaries(data.AllRequestSummariesRequest) returns (data.AllRequestSummariesReply);
     */
    allRequestSummaries(input: AllRequestSummariesRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: AllRequestSummariesReply) => void): grpc.ClientUnaryCall;
    allRequestSummaries(input: AllRequestSummariesRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: AllRequestSummariesReply) => void): grpc.ClientUnaryCall;
    allRequestSummaries(input: AllRequestSummariesRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: AllRequestSummariesReply) => void): grpc.ClientUnaryCall;
    allRequestSummaries(input: AllRequestSummariesRequest, callback: (err: grpc.ServiceError | null, value?: AllRequestSummariesReply) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: RequestSummariesForPlayer(data.RequestSummariesForPlayerRequest) returns (data.RequestSummariesForPlayerReply);
     */
    requestSummariesForPlayer(input: RequestSummariesForPlayerRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: RequestSummariesForPlayerReply) => void): grpc.ClientUnaryCall;
    requestSummariesForPlayer(input: RequestSummariesForPlayerRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: RequestSummariesForPlayerReply) => void): grpc.ClientUnaryCall;
    requestSummariesForPlayer(input: RequestSummariesForPlayerRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: RequestSummariesForPlayerReply) => void): grpc.ClientUnaryCall;
    requestSummariesForPlayer(input: RequestSummariesForPlayerRequest, callback: (err: grpc.ServiceError | null, value?: RequestSummariesForPlayerReply) => void): grpc.ClientUnaryCall;
}
/**
 * @generated from protobuf service data.Wish
 */
export class WishClient extends grpc.Client implements IWishClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * @generated from protobuf rpc: CreatePatch(data.CreatePatchRequest) returns (data.CreatePatchReply);
     */
    createPatch(input: CreatePatchRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreatePatchReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreatePatchReply) => void), callback?: ((err: grpc.ServiceError | null, value?: CreatePatchReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[0];
        return this.makeUnaryRequest<CreatePatchRequest, CreatePatchReply>(`/${Wish.typeName}/${method.name}`, (value: CreatePatchRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): CreatePatchReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: Patch(data.PatchRequest) returns (data.PatchReply);
     */
    patch(input: PatchRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: PatchReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: PatchReply) => void), callback?: ((err: grpc.ServiceError | null, value?: PatchReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[1];
        return this.makeUnaryRequest<PatchRequest, PatchReply>(`/${Wish.typeName}/${method.name}`, (value: PatchRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): PatchReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: Patches(data.PatchesRequest) returns (data.PatchesReply);
     */
    patches(input: PatchesRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: PatchesReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: PatchesReply) => void), callback?: ((err: grpc.ServiceError | null, value?: PatchesReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[2];
        return this.makeUnaryRequest<PatchesRequest, PatchesReply>(`/${Wish.typeName}/${method.name}`, (value: PatchesRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): PatchesReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: DeletePatch(data.DeletePatchRequest) returns (data.DeletePatchReply);
     */
    deletePatch(input: DeletePatchRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: DeletePatchReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: DeletePatchReply) => void), callback?: ((err: grpc.ServiceError | null, value?: DeletePatchReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[3];
        return this.makeUnaryRequest<DeletePatchRequest, DeletePatchReply>(`/${Wish.typeName}/${method.name}`, (value: DeletePatchRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): DeletePatchReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: CreatePatchChange(data.CreatePatchChangeRequest) returns (data.CreatePatchChangeReply);
     */
    createPatchChange(input: CreatePatchChangeRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreatePatchChangeReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreatePatchChangeReply) => void), callback?: ((err: grpc.ServiceError | null, value?: CreatePatchChangeReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[4];
        return this.makeUnaryRequest<CreatePatchChangeRequest, CreatePatchChangeReply>(`/${Wish.typeName}/${method.name}`, (value: CreatePatchChangeRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): CreatePatchChangeReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: DeletePatchChange(data.DeletePatchChangeRequest) returns (data.DeletePatchChangeReply);
     */
    deletePatchChange(input: DeletePatchChangeRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: DeletePatchChangeReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: DeletePatchChangeReply) => void), callback?: ((err: grpc.ServiceError | null, value?: DeletePatchChangeReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[5];
        return this.makeUnaryRequest<DeletePatchChangeRequest, DeletePatchChangeReply>(`/${Wish.typeName}/${method.name}`, (value: DeletePatchChangeRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): DeletePatchChangeReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: MarkPatchReleased(data.MarkPatchReleasedRequest) returns (data.MarkPatchReleasedReply);
     */
    markPatchReleased(input: MarkPatchReleasedRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: MarkPatchReleasedReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: MarkPatchReleasedReply) => void), callback?: ((err: grpc.ServiceError | null, value?: MarkPatchReleasedReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[6];
        return this.makeUnaryRequest<MarkPatchReleasedRequest, MarkPatchReleasedReply>(`/${Wish.typeName}/${method.name}`, (value: MarkPatchReleasedRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): MarkPatchReleasedReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: RevokePatchReleased(data.RevokePatchReleasedRequest) returns (data.RevokePatchReleasedReply);
     */
    revokePatchReleased(input: RevokePatchReleasedRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: RevokePatchReleasedReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: RevokePatchReleasedReply) => void), callback?: ((err: grpc.ServiceError | null, value?: RevokePatchReleasedReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[7];
        return this.makeUnaryRequest<RevokePatchReleasedRequest, RevokePatchReleasedReply>(`/${Wish.typeName}/${method.name}`, (value: RevokePatchReleasedRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): RevokePatchReleasedReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: ReleasedPatches(data.ReleasedPatchesRequest) returns (data.ReleasedPatchesReply);
     */
    releasedPatches(input: ReleasedPatchesRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ReleasedPatchesReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ReleasedPatchesReply) => void), callback?: ((err: grpc.ServiceError | null, value?: ReleasedPatchesReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[8];
        return this.makeUnaryRequest<ReleasedPatchesRequest, ReleasedPatchesReply>(`/${Wish.typeName}/${method.name}`, (value: ReleasedPatchesRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ReleasedPatchesReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: MostRecentPatch(data.MostRecentPatchRequest) returns (data.MostRecentPatchReply);
     */
    mostRecentPatch(input: MostRecentPatchRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: MostRecentPatchReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: MostRecentPatchReply) => void), callback?: ((err: grpc.ServiceError | null, value?: MostRecentPatchReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[9];
        return this.makeUnaryRequest<MostRecentPatchRequest, MostRecentPatchReply>(`/${Wish.typeName}/${method.name}`, (value: MostRecentPatchRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): MostRecentPatchReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: NewRequest(data.NewRequestRequest) returns (data.NewRequestReply);
     */
    newRequest(input: NewRequestRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: NewRequestReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: NewRequestReply) => void), callback?: ((err: grpc.ServiceError | null, value?: NewRequestReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[10];
        return this.makeUnaryRequest<NewRequestRequest, NewRequestReply>(`/${Wish.typeName}/${method.name}`, (value: NewRequestRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): NewRequestReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: AllRequestSummaries(data.AllRequestSummariesRequest) returns (data.AllRequestSummariesReply);
     */
    allRequestSummaries(input: AllRequestSummariesRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: AllRequestSummariesReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: AllRequestSummariesReply) => void), callback?: ((err: grpc.ServiceError | null, value?: AllRequestSummariesReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[11];
        return this.makeUnaryRequest<AllRequestSummariesRequest, AllRequestSummariesReply>(`/${Wish.typeName}/${method.name}`, (value: AllRequestSummariesRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): AllRequestSummariesReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: RequestSummariesForPlayer(data.RequestSummariesForPlayerRequest) returns (data.RequestSummariesForPlayerReply);
     */
    requestSummariesForPlayer(input: RequestSummariesForPlayerRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: RequestSummariesForPlayerReply) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: RequestSummariesForPlayerReply) => void), callback?: ((err: grpc.ServiceError | null, value?: RequestSummariesForPlayerReply) => void)): grpc.ClientUnaryCall {
        const method = Wish.methods[12];
        return this.makeUnaryRequest<RequestSummariesForPlayerRequest, RequestSummariesForPlayerReply>(`/${Wish.typeName}/${method.name}`, (value: RequestSummariesForPlayerRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): RequestSummariesForPlayerReply => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
}
